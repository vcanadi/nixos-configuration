let myLogger = (import ./myLogger.nix);
in
{ config, pkgs, lib, ... }:
{

    imports = [ # Include the results of the hardware scan.
        ./hardware-configuration.nix	
        ./modules/displayManager.nix
        ./modules/locale.nix
        ./modules/touch.nix	
        ./modules/net.nix
        ./modules/graphics.nix
        ./modules/audio.nix
        ./modules/jobs.nix
        ./modules/users.nix
        ];

    security.chromiumSuidSandbox.enable= true;

    environment={

        systemPackages = import ./modules/systemPackages.nix pkgs;
  /* 
        etc."inputrc" = lib.mkForce { 
            text = builtins.readFile (<nixpkgs/nixos/modules/programs/bash/inputrc>) + ''
                #${myLogger.placeShLogCall "etc/initrc"} 
                . /etc/keys
                set editing-mode vi
                set keymap vi-command
                '';
        };
 
        extraInit = ''
            #${myLogger.placeShLogCall "extraInit"} 

            export PAGER='vim -R -u /etc/nixos/resources/.vimrcpg -'
            export VISUAL=vim
            export EDITOR="$VISUAL"
            set editing-mode vi
            set keymap vi-command
        '';

        #shellInit =      myLogger.placeShLogCall "shellinit";
        #loginShellInit = myLogger.placeShLogCall "loginShellInit";
*/
        shellAliases = {
            gis = "git status";
            nixc = "cd /etc/nixos";
            nixb = "nixos-rebuild switch; . /etc/keys";
            nodemon = "~/node_modules/.bin/nodemon"; 
        };
    };

    nixpkgs.config={
        allowUnfree = true;	
        xkeyboard_config = {
            extraLayoutPath=/etc/keys;	
        };
    };

  # List services that you want to enable:
    services = {
        openssh.enable = true;    # OpenSSH daemon.
        #redshift.enable = true;
        #redshift.latitude = "46";
        #redshift.longitude = "16";
        nixosManual.showManual = true;
        postgresql.enable = true;
        postgresql.package = pkgs.postgresql94;
        postgresql.authentication = lib.mkForce ''
            # Generated file; do not edit!
            # TYPE  DATABASE        USER            ADDRESS                 METHOD
            local   all             all                                     trust
            host    all             all             127.0.0.1/32            trust
            host    all             all             ::1/128                 trust
            '';
    };


    boot = {
      #kernelModules = [ "snd-seq" "snd-rawmidi" ];
      #  extraModprobeConfig = ''options snd_hda_intel enable=0,1'';
      #  blacklistedKernelModules = [ 
        #      "snd_pcsp" 
        #   "nouveau"
        #    "i915"
        #        ];

            kernelParams=[
               "quiet"
               "splash"
          #    "asci=0"
          #	"nomodeset"
          #	"video=vesa:off"
          #	"vga=normal"
           ];
        #vesa=false;
        
        loader.grub = {
            enable = true;
            version = 2;
            copyKernels = true; # copy kernels to /boot so hopefully other linuxes can detect them
    		    device = "/dev/sda"; # Define on which hard drive you want to install Grub.
            extraEntries = ''
              menuentry 'Ubuntu' {
                  insmod ext2
                  set root='(hd0,3)'   
                  chainloader +1
              }  
            '';
		    };
    };

    # The NixOS release to be compatible with for stateful data such as databases.
    system.stateVersion = "17.03";

    security.polkit.enable=true;

    programs.fish.enable=true;
    users.defaultUserShell="/run/current-system/sw/bin/fish";
    users.extraUsers.user.shell="${pkgs.fish}/bin/fish";

    virtualisation.virtualbox.host.enable=false;
}



